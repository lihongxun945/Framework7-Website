extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Initialize App | Framework7 Documentation';

block content
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content
      h1 初始化应用
      p 你已经有了基本的页面布局和需要用的CSS以及JS文件。现在我们需要初始化我们的应用，比如在 <code>my-app.js</code>中
      pre.
        <code>var myApp = new Framework7();</code>
      p 上面这个例子中我们使用了 <code>myApp</code> 作为变量名存储 Framework7 初始化之后的实例。
      p 这样初始化非常简单，但是Framework7 也提供了更多个性化的定制，只需要在初始化的时候传入一个配置对象即可。
      pre
        code.
          var myApp = new Framework7({
              pushState: true,
              swipePanel: 'left',
              // ... other parameters
          });
      p 下面是这个变量的列表：
      table.params-table
        thead
          tr
            th 参数
            th 类型
            th 默认值
            th 说明
        tbody
          tr
            th(colspan="4") Material Theme (Material theme only)
          tr
            td material
            td boolean
            td false
            td Set to <b>true</b> to activate Material-specific App JS behavior
          tr
            td materialPageLoadDelay
            td number
            td 0
            td Delay (in ms) before animation of loaded page. Can be increased a bit to improve performance
          tr
            td materialRipple
            td boolean
            td true
            td Enable/disable Material-specific touch ripple effect
          tr
            td materialRippleElements
            td string
            td '.ripple, a.link, a.item-link, .button, .modal-button, .tab-link, .label-radio, .label-checkbox, .actions-modal-button, a.searchbar-clear, .floating-button'
            td CSS selector of elements to apply touch ripple effect on click
          tr
            td materialPreloaderSvg
            td string
            td '&lt;svg xmlns="http://www.w3.org/2000/svg" height="75" width="75" viewbox="0 0 75 75"&gt;&lt;circle cx="37.5" cy="37.5" r="33.5" stroke-width="8"/&gt;&lt;/svg&gt;'
            td HTML of Material' theme SVG preloader
          
          tr
            th(colspan="4") Caching
          tr
            td cache
            td boolean
            td true
            td 是否打开 Ajax 缓存,因为Framework7使用ajax加载新页面，最好启用Ajax缓存，特别是你的页面内容不经常更新的时候。
          tr
            td cacheDuration
            td number
            td 1000*60*10
            td Ajax 缓存时间，在缓存有效期内加载页面不会发起新的ajax请求而是直接使用缓存的结果。默认是10分钟。
          tr
            td cacheIgnore
            td array
            td []
            td 不希望被缓存的URL，这是一个字符串数组。
          tr
            td cacheIgnoreGetParameters
            td boolean
            td false
            td 缓存是否忽略get参数，如果为 "true"，那么像 "about.html?id=2" 和 "about.html?id=3" 将会和 "about.html" 是一样的缓存。
          tr
            th(colspan="4") 快速点击(Fast clicks library)
          tr
            td fastClicks
            td boolean
            td true
            td Fast clicks 是一个内置库，当你点击链接或者提交表单的时候，她会移除300毫秒的延迟。如果你有其他的 fast click 库，你可以禁用这个功能。
          tr
            td fastClicksDelayBetweenClicks
            td number
            td 50
            td Minimal allowed delay (in ms) between miltiple clicks
          tr
            td fastClicksDistanceThreshold
            td number
            td 10
            td 需要阻止tab事件的距离。当 tap/move 的距离超过这个值的时候，不会触发click事件。
          tr
            td activeState
            td boolean
            td true
            td 启用这个设置时，会给当前点击的元素增加一个 'active-state' class。
          tr
            td activeStateElemets
            td string
            td 'a, button, label, span'
            td 应该在这些元素上加 <code>activeState</code>
          tr
            td tapHold
            td boolean
            td false
            td Set to <b>true</b> to enable tap hold events
          tr
            td tapHoldDelay
            td number
            td 750
            td Determines how long (in ms) the user must hold their tap before the taphold event is fired on the target element
          tr
            td tapHoldPreventClicks
            td boolean
            td true
            td When enabled (by default), then click event will not be fired after tap hold event
          tr
            th(colspan="4") Navigation / Router
          tr
            td router
            td boolean
            td true
            td 如果你有自己的路由实现，你可以禁用默认的路由
          tr
            td ajaxLinks
            td string
            td undefined
            td 指定哪些链接需要用ajax加载，默认情况下（当为undefined时）Framework7 会使用ajax加载所有的链接。你可以通过设置一个CSS选择器来指定需要通过Ajax加载的链接，比如 <code>"a.ajax"</code> - 只有class 为 "ajax" 的链接。
          
          tr
            td dynamicPageUrl
            td string
            td 'content-{{index}}'
            td URL rule for dynamically loaded pages. Available replaceable expressions: '{{index}}' (page index number in navigation history) and '{{name}}' (value of page "data-page" attribute)
          tr
            td uniqueHistory
            td boolean
            td false
            td Set to true and App will keep View's navigation history unique, it will also remove duplicated pages
          tr
            td uniqueHistoryIgnoreGetParameters
            td boolean
            td false
            td Use this parameter in addition to <code>uniqueHistory</code>. Set to true and App will ignore URL GET parameters when cheking its uniqueness. So the URLs like "page.html" and "page.html?id=3" will be treated as the same.
          tr
            td externalLinks
            td string
            td '.external'
            td 不应该被 Framework7 管理的链接的CSS选择器。比如 ".external" 会匹配到这样的链接 &lt;a href="somepage.html" class="external"&gt; (因为它有 "external" 类)
          tr
            td allowDuplicateUrls
            td boolean
            td false
            td You may enable this parameter to allow loading of new pages that have same url as currently "active" page in View.
          tr
            td animateNavBackIcon
            td boolean
            td false
            td 当启用这个功能时，动态导航栏中的 back-link 图标的动画会更接近iOS的风格。只有当你使用动态导航栏并且使用了默认的 back-link 图标时才应该把这个值设置为 "sliding"。 <span class="ios-only">iOS theme only</span>
          tr 
            td animatePages
            td boolean
            td true
            td 如果你想禁用页面切换的动画，就把这个值设置为 false。
          tr
            td preloadPreviousPage
            td boolean
            td true
            td 预加载上一页，为了能让"滑动返回上一页"功能正常工作，这个值应该设置为 true。
          tr
            td preroute
            td function(view, options)
            td -
            td 
              p This callback allows to prevent default router load/back actions and to load another page or do another required actions
              p Look for example below
          tr
            td preprocess
            td function(content, url, next)
            td -
            td 
              p This callback function allows you to modify loaded router (mostly Ajax) content right before it will be injected to DOM. Callback receives "content" and "url" of the loaded page and the "next" callback function. After you modify content within this function you should return it with: <code>return content</code>
              p Look for example below
          tr
            th(colspan="4") Push State
          tr
            td pushState
            td boolean
            td false
            td 如果你开发web app（而不是通过PhoneGap封装的混合应用)，那么这个功能将很有用（浏览器的URL将会看上去像这样 "http://my-webapp.com/#/about.html")。用户可以通过浏览器默认的前进后退按钮来操作。
          tr
            td pushStateSeparator
            td string
            td '#!/'
            td push state 时候在URL中使用的分隔符，如果改成 "#page/"，那么你的url将会像这样 "http://myapp.com/#page/about.html"
          tr
            td pushStateRoot
            td string
            td undefined
            td Push state URL根路径, 比如 "http://my-app.com/". 只有当你把 pushStateSeparator 设置为空("")时才有效。
          tr
            td pushStateNoAnimation
            td boolean
            td false
            td 如果设置为 false，那么会继承当前 View 的 animatePages 参数。如果设置为 true，那么页面切换的时候将没有动画效果。
          tr
            td pushStatePreventOnLoad
            td boolean
            td true
            td If enabled, the first pop state event on app load will be ignored, as it can casue issues that load unnecessary. But useful to disable when you init app using async loaders like Require.js
          
          tr
            th(colspan="4") 滑动返回上一页(iOS theme only)
          tr
            td swipeBackPage
            td boolean
            td true
            td 开启/关闭滑动返回上一页功能。
          tr
            td swipeBackPageThreshold
            td number
            td 0
            td 单位px，当滑动距离超过这个数值的时候，滑动返回上一步功能就会生效。
          tr
            td swipeBackPageActiveArea
            td number
            td 30
            td Value in px. Width of invisible left edge of the screen that triggers swipe back action
          tr
            td swipeBackPageAnimateShadow
            td boolean
            td true
            td 打开/关闭 滑动返回时候的 box-shadow 动画。关闭这个功能可以提高性能。
          tr
            td swipeBackPageAnimateOpacity
            td boolean
            td true
            td 打开/关闭 滑动返回时候的半透明效果。关闭这个功能可以提高性能。
          tr
            th(colspan="4") 可排序列表(Sortable Lists)
          tr
            td sortable
            td boolean
            td true
            td 如果你不使用可排序列表，可以禁用这个功能。因为禁用之后可能会有潜在的性能提升。
          tr
            th(colspan="4") 滑动删除(swipeout)
          tr
            td swipeout
            td boolean
            td true
            td 如果你使用滑动删除，禁用这个选项，可能会带来潜在的性能提升。
          tr
            td swipeoutNoFollow
            td boolean
            td false
            td 滑动删除的时候动画是否跟随手指移动，如果设置为true，那么你滑动的时候动画会自动开始/结束，而不是跟随你手指的位置，这样在老的设备上可能会有更好性能。
          tr
            th(colspan="4") Side Panels
          tr
            td swipePanel
            td string
            td false
            td 默认是禁用的，如果你希望通过滑动可以打开 side panel，那么可以设置为 "left" (lef panel) 或者 "right" ( right panel)
          tr
            td swipePanelCloseOpposite
            td boolean
            td true
            td This parameter gives ability to close opposite panel by swipe. For example, if your swipePanel is "left", then you could close "right" panel also with swipe.
          tr
            td swipePanelOnlyClose
            td boolean
            td false
            td This parameter allows to close (but not open) panels with swipes
          tr
            td swipePanelActiveArea
            td number
            td false
            td Value in px. Width of invisible edge from the screen that triggers swipe panel
          tr
            td swipePanelNoFollow
            td boolean
            td false
            td 为了兼容老的设备。当设置为 true时，side panel的动画不会跟随你的手指，而是自动开始/结束。

          tr
            td swipePanelThreshold
            td number
            td 0
            td Value in px. Panel will not move with swipe if "touch distance" will be less than this value.
          tr
            td panelsCloseByOutside
            td boolean
            td true
            td 点击 panel 外面来关闭她。
          tr
            th(colspan="4") 弹层(Modals)
          tr
            td modalTitle
            td string
            td 'Framework7'
            td 默认的标题 (Alert, Confirm, Prompt)
          tr
            td modalButtonOk
            td string
            td 'OK'
            td 确定按钮的默认文案
          tr
            td modalButtonCancel
            td string
            td 'Cancel'
            td 取消按钮的默认文案
          tr
            td modalPreloaderTitle
            td string
            td 'Loading... '
            td 默认的加载提示文案
          tr
            td modalCloseByOutside
            td boolean
            td false
            td 点击modal(Alert, Confirm, Prompt)外面关闭她。
          tr
            td actionsCloseByOutside
            td boolean
            td true
            td 和上面一样，但是是针对 Action Sheet 的
          tr
            td popupCloseByOutside
            td boolean
            td true
            td 和上面一样但是针对 popup 的
          tr
            td modalTemplate
            td string
            td undefined
            td 弹层（alert, confirm and prompt) 对应的 <a href="template7.html">Template7</a> 模板。参见<a href="modal.html#modal-template">Modal Template</a>
          tr
            td modalActionsTemplate
            td string
            td undefined
            td <a href="template7.html">Template7</a> formatted HTML template for Action Sheet. Could be useful if you want to add some custom elements to Action Sheet layout. Look at the example of <a href="action-sheet.html#action-sheet-template">Action Sheet Template</a>
          
          tr
            td modalActionsToPopoverTemplate
            td string
            td 
            td <a href="template7.html">Template7</a> formatted HTML template for Action Sheet that will be <a href="http:/action-sheet.html#convert-action-sheet-to-popover">converted to Popover</a>. Could be useful if you want to add some custom elements to Popover layout. Look at the example of <a href="action-sheet.html#action-sheet-to-popover-template">Action Sheet To Popover Template</a>
          tr
            td modalUsernamePlaceholder
            td string
            td 'Username'
            td 在Login Modal中，username输入框的占位符
          tr
            td modalPasswordPlaceholder
            td string
            td 'Password'
            td 在 Login 和 Password Modals 中密码输入框的占位符
          tr
            td modalStack
            td boolean
            td true
            td This feature doesn't allow to open multiple modals at the same time, and will automatically open next modal when you close the current one. Such behavior is similar to browser native alerts
          
          tr
            th(colspan="4") Smart Select
          tr
            td smartSelectOpenIn
            td string
            td 'page'
            td Specify default way of how Smart Select should be opened. Can be 'page', 'popup' or 'picker'

          tr
            td smartSelectBackTemplate
            td string
            td '&lt;div class="left sliding"&gt;&lt;a href="#" class="back link"&gt;&lt;i class="icon icon-back"&gt;&lt;/i&gt;&lt;span&gt;{{backText}}&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;'
            td Smart select 页面模式中导航栏中的返回按钮的HTML模板

          tr
            td smartSelectPopupCloseTemplate
            td string
            td '&lt;div class="left"&gt;&lt;a href="#" class="link close-popup"&gt;&lt;i class="icon icon-back"&gt;&lt;/i&gt;&lt;span&gt;{{closeText}}&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;'
            td Smart Select 弹层方式中关闭链接的 HTML template
          tr
            td smartSelectBackText
            td string
            td 'Back'
            td Smart select 页面导航栏中的返回按钮的文案
          tr
            td smartSelectPopupCloseText
            td string
            td 'Close'
            td Default close link text for Smart Select's popup navbar
          tr
            td smartSelectPickerCloseText
            td string
            td 'Done'
            td Default close link text for Smart Select's picker toolbar
          tr
            td smartSelectSearchbar
            td boolean
            td false
            td 所有的 Smart Selects 打开/关闭搜索功能。
          tr
            td smartSelectBackOnSelect
            td boolean
            td false
            td 在 smart select 页面选择任何条目之后立刻返回。
          tr
            td smartSelectFormTheme
            td string
            td undefined
            td smart select 页面/弹层中 使用的主题，是十个默认的<a href="color-themes.html">颜色主题</a>中的一个。
          tr
            td smartSelectNavbarTheme
            td string
            td undefined
            td smart select 页面/弹层中的导航栏主题，是十个默认的<a href="color-themes.html">颜色主题</a>中的一个。
          
          tr
            th(colspan="4") 导航栏和工具栏(Navbars / Toolbars)
          tr
            td hideNavbarOnPageScroll
            td boolean
            td false
            td 设置为true，那么当页面向下滚动的时候，导航栏会自动隐藏；向上滚动的时候会自动出现。
          tr
            td hideToolbarOnPageScroll
            td boolean
            td false
            td 设置为true，那么当页面向下滚动的时候，工具栏会自动隐藏；向上滚动的时候会自动出现。
          tr
            td hideTabbarOnPageScroll
            td boolean
            td false
            td Set to true and Tab bar will be hidden automatically on page scroll down, and become visible on scroll up. Note that this is only for Tab Bar app layout, otherwise use <code>hideToolbarOnPageScroll</code>
          tr
            td showBarsOnPageScrollEnd
            td boolean
            td true
            td 设置为true，那么当页面滚动到底部的时候会自动显示出被隐藏的导航栏和工具栏。
          tr
            td showBarsOnPageScrollTop
            td boolean
            td true
            td Set to false and bars will not become visible when you scroll page to top everytime. They will become visible only on the most top scroll position, in the beginning of the page
          tr
            td scrollTopOnNavbarClick
            td boolean
            td false
            td Set to true and each click on Navbar's "center" element will scroll currently active page to top
          tr
            th(colspan="4") Images Lazy Load
          tr
            td imagesLazyLoadThreshold
            td number
            td 0
            td By default images are loaded when they appear on the screen. Use this parameter if you want to load images earlier. Setting it to 50 will load image when it 50 pixels before it appears on viewport
          tr
            td imagesLazyLoadSequential
            td boolean
            td true
            td If enabled, then lazy images will be loaded one by one when they appear in viewport
          tr
            td imagesLazyLoadPlaceholder
            td string
            td 
            td Lazy load image placeholder source to show while image is not yet loaded. By default it is 1x1 px image
          tr
            th(colspan="4") Notifications
          tr
            td notificationTitle
            td string
            td undefined
            td 所有通知(notifications)的默认标题<span class="ios-only">iOS theme only</span>
          tr
            td notificationSubtitle
            td string
            td undefined
            td 所有通知(notifications)的默认副标题<span class="ios-only">iOS theme only</span>
          tr
            td notificationMedia
            td string
            td undefined
            td 所有通知(notifications)的默认图标<span class="ios-only">iOS theme only</span>
          tr
            td notificationHold
            td number
            td undefined
            td 所有通知(notifications)的默认显示时间
          tr
            td notificationCloseOnClick
            td boolean
            td false
            td 设置为true之后，点击就可以关闭通知
          tr
            td notificationCloseIcon
            td boolean
            td true
            td 设置为true，则默认就会显示一个关闭按钮<span class="ios-only">iOS theme only</span>
          tr
            td notificationCloseButtonText
            td string
            td 'Close'
            td Default text for Snackbars' close button <span class="material-only">Material theme only</span>
          tr
            th(colspan="4") 状态栏(Status Bar)<span class="ios-only">iOS theme only</span>
          tr
            td statusbarOverlay
            td boolean
            td undefined
            td With this option you can overwrite automatic <a href="status-bar.html">status bar detection</a>
          tr
            td scrollTopOnStatusbarClick
            td boolean
            td false
            td Set to true and each click on Status bar ("status-bar-overlay") will scroll currently active page to top
          tr
            th(colspan="4") Template7
          tr
            td template7Pages
            td boolean
            td false
            td 设置为true，则会自动使用 Template7 来渲染 ajax或者动态生成的页面。这里有更详细的说明 <a href="template7-pages.html">Template7 Pages</a>
          tr
            td template7Data
            td object
            td {}
            td 用来存储Template7 渲染页面所需的数据。这里有更详细的说明：<a href="template7-pages.html">Template7 Pages</a>
          tr
            td precompileTemplates
            td boolean
            td false
            td 是否自动编译所有的 Template7 模板。这里有更详细的说明：<a href="template7-auto-compilation.html">Templates Auto Compilation</a>
          tr
            td templates
            td object
            td {}
            td 编译好的 Template7 模板。这里有更详细的说明：<a href="template7-auto-compilation.html">Templates Auto Compilation</a>
          tr
            th(colspan="4") 页面回调(Page Callbacks)
          tr
            td onPageBeforeInit
            td function(app, page)
            td -
            td 回调函数，当Framework7把新页面插入到DOM的时候会触发这个回调。和 <a href="pages.html#page-events">page event</a> 中的 "pageBeforeInit" 是一样的。
          tr
            td onPageInit
            td function(app, page)
            td -
            td 回调函数，当Framework7初始化页面的组件的时候会调用这个回调。 和  <a href="pages.html#page-events">page event</a> 中的 "pageInit"事件是相同的作用
          tr
            td onPageBeforeAnimation
            td function(app, page)
            td -
            td 回调函数，当页面全部初始化完成之后并且准备好开始做动画的时候会调用此回调。和<a href="pages.html#page-events">page event</a> 中的 "pageBeforeAnimation" 是一样的。
          tr
            td onPageAfterAnimation
            td function(app, page)
            td -
            td 回调函数，当页面动画结束的时候调用。和 <a href="pages.html#page-events">page event</a> 中的 "pageAfterAnimation" 是相同的作用
          tr
            td onPageBeforeRemove
            td function(app, page)
            td -
            td 回调函数，当页面从DOM中移除的时候调用。和 <a href="pages.html#page-events">page event</a> 中的 "pageBeforeRemove" 是相同的作用
          tr
            td onPageBack
            td function(app, page)
            td -
            td Callback function that will be executed right before "back" transition. Difference with "onPageBeforeAnimation" is that this callback will be executed for the "old" page - page that slides from center to right. Does the same as "pageBack" <a href="pages.html#page-events">page event</a>
          tr
            td onPageAfterBack
            td function(app, page)
            td -
            td Callback function that will be executed right after "back" transition. Difference with "onPageAfterAnimation" is that this callback will be executed for the "old" page - page that slides from center to right. Does the same as "pageAfterBack" <a href="pages.html#page-events">page event</a>
          tr
            th(colspan="4") Ajax回调函数(Ajax Callbacks)
          tr
            td onAjaxStart
            td function(xhr)
            td -
            td 当Ajax请求开始的时候调用，这个函数会传递一个 xhr 对象作为参数。
          tr
            td onAjaxComplete
            td function(xhr)
            td -
            td Ajax 请求结束的时候调用。会传递一个xhr对象作为参数。
          tr
            th(colspan="4") 命名空间
              p
                strong 注意！如果你改变了命名空间，记得也要改CSS中对应的class！
          tr
            td viewClass
            td string
            td 'view'
            td View 元素对应的class
          tr
            td viewMainClass
            td string
            td 'view-main'
            td main view 元素对应的 class
          tr
            td viewsClass
            td string
            td 'views'
            td views 元素对应的class
          
          tr
            th(colspan="4") 初始化(Init)
          tr
            td init
            td boolean
            td true
            td 默认情况下，当你调用  <code>new Framework7()</code> 的时候Framework7会自动初始化。如果你希望自己手动控制，那么你可以禁用这个选项，然后自己调用 <code>myApp.init()</code>来初始化。
      p 最终你写在 <code>my-app.js</code> 中的代码可能会是这样的：
      pre
        code
          | var myApp = new Framework7({
          |     // Default title for modals
          |     modalTitle: 'My App',
          | 
          |     // If it is webapp, we can enable hash navigation:
          |     pushState: true,
          | 
          |     // Hide and show indicator during ajax requests
          |     onAjaxStart: function (xhr) {
          |         myApp.showIndicator();
          |     },
          |     onAjaxComplete: function (xhr) {
          |         myApp.hideIndicator();
          |     }
          | });   
      h2 预处理内容
      p Framework 可以让你用自己喜欢的客户端模板引擎，或者在内容加载之后再做任意修改。
      p 让我们看看如何在初始化应用的时候把 Template7 当做我们自己的客户端模板引擎。
      pre
        code
          | var myApp = new Framework7({
          |     preprocess: function (content, url, next) {
          |         if (url === 'people.html') {
          |             var template = Template7.compile(content);
          |             var resultContent = template({
          |                 title: 'People',
          |                 people: ['John', 'Ivan', 'Mary']
          |             })
          |             return resultContent;
          |         }
          |     }
          | });
      p And the <code>people.html</code> page:
      pre
        code.
          &lt;div class="navbar"&gt;
            &lt;div class="navbar-inner"&gt;
              &lt;div class="center"&gt;{{title}}&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="pages"&gt;
            &lt;div data-page="people" class="page"&gt;
              &lt;div class="page-content"&gt;
                &lt;ul&gt;
                  {{#each people}}
                  &lt;li&gt;{{this}}&lt;/li&gt;
                  {{/each}}
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
      p 有时候你会在预处理方法中有一些异步的逻辑，比如你用ajax来加载页面。这种情况下，我们提供了 "next" 回调函数，用来传入我们编译或者修改后的内容：
      pre
        code
          | var myApp = new Framework7({
          |     preprocess: function (content, url, next) {
          |         if (url === 'people.html') {
          |             // For example, we will retreive template JSON data using Ajax and only after that we will continue page loading process
          |             $$.get('sometemplate.html', function(data) {
          |                 // Template
          |                 var template = Template7.compile(content);
          | 
          |                 // Compile content template with received JSON data
          |                 var resultContent = template(data);
          | 
          |                 // Now we call "next" callback function with result content
          |                 next(resultContent);
          |             });
          |             // Now we shouldn't return anything
          |         }
          |     }
          | });          
      h2 "prerouter" 示例
      p 这个回调函数可以用来阻止路由器默认的 加载/返回 行为，你可以自己去加载其他页面，重定向，或者做任意你需要的操作。
      p 比如我们在用户访问某些页面的时候可以去检查他是否登录，如果未登录就跳转到登录页面
      pre
        code
          | var myApp = new Framework7({
          |     preroute: function (view, options) {
          |         if (!userLoggedIn) {
          |             view.router.loadPage('auth.html'); //load another page with auth form
          |             return false; //required to prevent default router action
          |         }
          |     }
          | });
      h2 下一步
      p 在初始化应用之后，我们需要添加并初始化 <a href="views.html">视图</a> 
